needs "raw_printer.hl";;
needs "sections.hl";;
needs "ssreflect.hl";;

(* Install universal HOL Light printers *)

let pp_print_num fmt n =
  Format.pp_open_hbox fmt ();
  Format.pp_print_string fmt (Num.string_of_num n);
  Format.pp_close_box fmt ();;

let (pp_print_goal:Format.formatter->goal->unit) =
  let pp_print_hyp fmt n (s,th) =
    Format.fprintf fmt "@[<h>%3d [@[<hv 0>%a@]]%s@]@."
        n pp_print_qterm (concl th)
        (if s <> "" then " (" ^ s ^ ")" else "") in
  let rec pp_print_hyps fmt n asl =
    if asl = [] then () else
    (pp_print_hyp fmt n (hd asl);
     pp_print_hyps fmt (n + 1) (tl asl)) in
  fun fmt (asl,w) ->
    Format.pp_print_newline fmt ();
    if asl <> [] then (pp_print_hyps fmt 0 (rev asl); Format.pp_print_newline fmt ()) else ();
    pp_print_qterm fmt w; Format.pp_print_newline fmt ();;

let (pp_print_goalstack:Format.formatter->goalstack->unit) =
  let pp_print_goalstate fmt k gs =
    let (_,gl,_) = gs in
    let n = length gl in
    let s = if n = 0 then "No subgoals" else
              (string_of_int k)^" subgoal"^(if k > 1 then "s" else "")
           ^" ("^(string_of_int n)^" total)" in
    Format.pp_print_string fmt s; Format.pp_print_newline fmt ();
    if gl = [] then () else
    do_list (pp_print_goal fmt o C el gl) (rev(0--(k-1))) in
  fun fmt l ->
    if l = [] then Format.pp_print_string fmt "Empty goalstack"
    else if tl l = [] then
      let (_,gl,_ as gs) = hd l in
      pp_print_goalstate fmt 1 gs
    else
      let (_,gl,_ as gs) = hd l
      and (_,gl0,_) = hd(tl l) in
      let p = length gl - length gl0 in
      let p' = if p < 1 then 1 else p + 1 in
      pp_print_goalstate fmt p' gs;;


#install_printer pp_print_num;;

#install_printer pp_print_qtype;;
#install_printer pp_print_qterm;;
#install_printer pp_print_thm;;

#install_printer pp_print_goal;;
#install_printer pp_print_goalstack;;


#load "unix.cma";;
#load "server.cmo";;
